{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFethGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAM,SAAAC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAIGqB,EDb2BK,CAAY1B,GAAhCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QACtB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEI,6BACKH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eEqB/BgB,EAhCM,SAACC,GAAW,IAAD,EAEQ1C,mBAAS,CAAC,cAFlB,mBAErB2C,EAFqB,KAET5C,EAFS,KAQ5B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCjBjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6048a22c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSummit = (e) => {\r\n        e.preventDefault(); // Evitar que se recargue la pÃ¡gina al hacer enter\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSummit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=bc4z4HGMrdOkMRSQCACFxPFeRkAG0hir`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFethGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // Custom Hook\r\n    const { data: images, loading } = useFethGifs(category);\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                <ol>\r\n                    {images.map((img) =>\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    )}\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"; // Indica a los componenetes cuando debe renderizacer cual algo cambia\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFethGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    // Cuando se desea que se ejecute una funcion cuando el codigo es renderizado por primera vez\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        }))\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = (props) => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories, 'HunterXHunter']);\r\n    //     setCategories(cat => [...cat, 'Hunter']);\r\n    // };\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}